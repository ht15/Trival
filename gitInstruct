1、git分支

git branch dev       #创建dev分支
git checkout dev     #进入dev分支/切换分支

git checkout -b dev  #创建并切换到dev分支

git merger <name>    #将<name>分支合并到当前分支 --no-ff参数可以取消快速合并，可以看到合并历史

git branch -d <name> #删除分支

2、放弃修改

git checkout <file>    #放弃工作区的修改

git reset HEAD         #git add 后，可以清空暂存区，之后再git checkout

3、关联远程仓库

git remote add origin git@github.com:ht15/Trival.git

4、git冲突处理

如果在更改文件之前没有拉取远程仓库的更新，那么可能会造成冲突，即本地git push产生冲突。

这里假设在本地git commit后才发现有冲突，那么可以进行如下处理：
git reset HEAD^         #回退到上个版本，并保留更改
git stash               #保存更改
git pull                #拉取最近代码
git stash pop           #弹出保存的更改
手动处理冲突
git add -> git commit -> git push

所以要记得git pull 阿

4、多人协作

git remote -v       #查看远程分支

git checkout -b dev origin/dev     #创建远程分支到本地

git branch --set-upstream-to dev origin/dev    #关联远程分支后才能git pull

git push origin dev     #推送到远程仓库的dev分支
5.关联远程库

关联之前首先要生成SSH-KEY： ssh-genkey -t rsa -C "yourmail@mail"
关联远程库：git remote add origin git@github.com:ht15/Trival.git       其中origin为远程库的名字，随后可以进行git push 和git pull操作

复制远程库: git clone git@github.com:ht15/Trival.git
